# yaml-language-server: $schema=https://json-schema.org/draft-07/schema#
name: Build
on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main
    types:
      - labeled
jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Install packages
        run: |
          poetry install -E dev --no-root
      - name: Lint Python Files
        run: |
          poetry run flake8 **/*.py
  test:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set env variables
        run: |
          echo "$AZURE_SECRET_BLOB" > ./.env.sh
        shell: bash
        env:
          AZURE_SECRET_BLOB: ${{ secrets.AZURE_SECRET_BLOB }}
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install python tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Install dependencies
        run: |
          poetry install -E dev --no-root
      - name: Authenticate with google cloud
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.KUBEFLOW_V181_GCP_KEY }}"
      - name: Fetch GKE test cluster credentials
        uses: "google-github-actions/get-gke-credentials@v0"
        with:
          location: "northamerica-northeast1-b"
          project_id: "same-project-kubeflow"
          cluster_name: "same-kubeflow-v181"
      - name: Run tests
        run: |
          set -o pipefail
          mkdir -p artifacts/tests 
          poetry run pytest \
            -n 4 \
            --kubeflow \
            --junitxml=artifacts/tests/results.xml \
            --cov=./backends \
            --cov=./cli \
            --cov=./objects \
            --cov=./sdk \
            --cov=./clients \
            --cov=./jupyter \
            --cov-report=term \
            --cov-report=xml:artifacts/tests/coverage.xml \
            --cov-report=html:artifacts/tests/coverage.html \
            | tee artifacts/tests/output.txt
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: artifacts/tests
      - name: Report test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: ./artifacts/tests/results.xml
      - name: Report coverage
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./artifacts/tests/output.txt
          junitxml-path: ./artifacts/tests/results.xml
          junitxml-title: Test Summary

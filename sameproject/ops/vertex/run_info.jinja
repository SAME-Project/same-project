{% autoescape off %}"""
The run_info component fetches metadata about the current pipeline execution
from kubeflow and passes it on to the user code step components.
"""
from typing import NamedTuple


def run_info_fn(
    name: str,
    job_id: str,
    kfp_run_id: str, 
    kfp_execution_id: str, 
) -> NamedTuple("RunInfoOutput", [("run_info", str),]):
    from base64 import urlsafe_b64encode
    from collections import namedtuple
    import datetime
    import base64
    import dill
    import kfp
    import uuid

    run_info_dict = {
        "run_id": job_id,
        "kfp_run_id": kfp_run_id, 
        "kfp_execution_id": kfp_execution_id,
        "name": name,
        "created_at": datetime.datetime.now().isoformat(),
    }

    # Track kubernetes resources associated wth the run.
    # for r in run_info.run.resource_references:
    #   run_info_dict[f"{r.key.type.lower()}_id"] = r.key.id

    # Base64-encoded as value is visible in kubeflow ui.
    output = urlsafe_b64encode(dill.dumps(run_info_dict))

    return namedtuple("RunInfoOutput", ["run_info"])(
        str(output, encoding="ascii")
    )
{% endautoescape %}
